[
  {
    "objectID": "Practical.html",
    "href": "Practical.html",
    "title": "2  Practical",
    "section": "",
    "text": "Loading required package: iterators\n\n\nLoading required package: parallel\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ purrr::accumulate() masks foreach::accumulate()\n✖ dplyr::filter()     masks stats::filter()\n✖ dplyr::lag()        masks stats::lag()\n✖ purrr::when()       masks foreach::when()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n3 Question 1\n\n#Initialize cluster\ncl &lt;- makeCluster(10)\nregisterDoParallel(cl)\n\n\n\n\n\n#Loop\nresults &lt;- foreach(i = 1:100 ,.combine = rbind ) %dopar% {\n  vals &lt;- rexp(100,1)\n  c(mean(vals), var(vals))\n  \n}\n\nstopCluster(cl)\n\nresults |&gt; \n  data.frame() |&gt; \n  tibble::remove_rownames() |&gt; \n  knitr::kable(col.names = c(\"Means\", \"Variances\"))\n\n\n\n\nMeans\nVariances\n\n\n\n\n0.9738606\n0.7524845\n\n\n1.2536149\n1.5462746\n\n\n1.0461824\n0.8609403\n\n\n1.0530972\n1.0261303\n\n\n0.9965597\n1.0998122\n\n\n1.2284986\n1.5603163\n\n\n0.9701479\n1.0852690\n\n\n1.0721012\n0.9276348\n\n\n1.1498004\n1.1453296\n\n\n1.1998452\n1.8456644\n\n\n0.9680056\n1.2228480\n\n\n0.9046264\n0.7724686\n\n\n1.1496834\n1.5191813\n\n\n0.9607918\n0.7658357\n\n\n1.1152065\n1.2521116\n\n\n1.0929173\n0.8418023\n\n\n1.0904461\n1.4695640\n\n\n1.1632109\n1.5043620\n\n\n0.9125886\n1.0583093\n\n\n0.8386121\n0.6101124\n\n\n1.0743359\n1.1694975\n\n\n0.8911350\n0.8132999\n\n\n0.9353131\n0.6587062\n\n\n1.2267860\n1.3269819\n\n\n0.9579174\n0.7849033\n\n\n1.0616777\n1.1185066\n\n\n0.8201907\n0.6989245\n\n\n0.8379574\n0.6292748\n\n\n0.9636365\n1.0940164\n\n\n0.9230799\n0.9007024\n\n\n0.9369950\n0.8259459\n\n\n1.0493900\n1.2007275\n\n\n1.0486144\n1.2762552\n\n\n1.0026147\n0.9832803\n\n\n0.9544912\n0.8171711\n\n\n0.9144510\n0.6312822\n\n\n1.1561256\n1.1839252\n\n\n1.0517815\n1.3512283\n\n\n0.8727528\n0.6668110\n\n\n1.0028135\n1.0797320\n\n\n0.9927664\n0.9426075\n\n\n0.8971640\n0.7166669\n\n\n0.9630936\n0.7978428\n\n\n0.9400065\n0.6140279\n\n\n1.0614292\n1.1649179\n\n\n0.9518299\n0.7163426\n\n\n1.0597196\n0.9031169\n\n\n1.1975500\n1.4758240\n\n\n1.0195601\n1.4347950\n\n\n0.8823251\n0.6809571\n\n\n1.0837588\n1.0417929\n\n\n0.8891163\n0.7486296\n\n\n0.9603821\n0.7967442\n\n\n0.9178406\n0.6762562\n\n\n1.1060709\n0.9364677\n\n\n1.1160082\n0.9098611\n\n\n1.0800634\n0.9094923\n\n\n1.0944515\n0.8266004\n\n\n1.1908523\n1.0609397\n\n\n0.8628577\n0.8980362\n\n\n0.8270985\n0.6922838\n\n\n0.9207198\n0.8426674\n\n\n0.9128977\n0.6766781\n\n\n0.9975268\n1.1200500\n\n\n0.9424441\n1.4849729\n\n\n1.1365350\n1.2983063\n\n\n1.0120395\n0.9980598\n\n\n0.8514506\n1.0236761\n\n\n1.0164039\n0.8081466\n\n\n0.8708118\n1.0709557\n\n\n1.0919846\n1.0236925\n\n\n1.0741963\n0.9095040\n\n\n0.9697814\n1.0763884\n\n\n0.9867731\n0.9037020\n\n\n1.0669902\n1.0841181\n\n\n0.9294188\n0.7837923\n\n\n0.8904621\n1.3369146\n\n\n1.1432013\n1.2555786\n\n\n1.1173296\n1.2216764\n\n\n1.1508337\n0.9674398\n\n\n1.0749916\n1.3597142\n\n\n1.0011545\n0.7210400\n\n\n1.0112001\n1.0784695\n\n\n0.9069020\n0.8956410\n\n\n1.1352181\n1.0063722\n\n\n1.0203692\n0.8252327\n\n\n0.9133526\n0.6219597\n\n\n1.0700155\n1.0202238\n\n\n1.0219424\n1.2137296\n\n\n0.9652988\n0.8514693\n\n\n1.0444424\n0.7799699\n\n\n1.0096307\n1.0766267\n\n\n0.9690904\n1.3963968\n\n\n0.8055673\n0.7130883\n\n\n0.8722903\n1.4799266\n\n\n1.0793870\n1.3556510\n\n\n0.9775961\n0.7647108\n\n\n1.0570234\n0.8834551\n\n\n0.8413293\n0.9134987\n\n\n0.9002069\n0.6396205\n\n\n\n\n\n\n\n4 Question 2\n\nlibrary(MASS)\ngal &lt;- galaxies\n\n#1 Bootstrap sample of 1000 at a time\n\n#Serial \nsystem.time(\n  result1 &lt;- foreach(i = 1:1000, .combine = c ) %do% {\n    res &lt;- sample(gal, replace = TRUE)\n    median(res)\n  }\n)\n\n#Parallel\n\ncl &lt;- makeCluster(10)\nregisterDoParallel(cl)\n\nt &lt;- system.time(\n  result2 &lt;- foreach(i = 1:1000, .combine = c ) %dopar% {\n    res &lt;- sample(gal, replace = TRUE)\n    median(res)\n  }\n) \n\n\n\n\n  \n \n  \n\nstopCluster(cl)\nmean(result1)\nmean(result2)\n\n#1000 bootstrap samples of 1000 at a time \n\n\n#Serial \nsystem.time(\n  result1 &lt;- foreach(i = 1:1000, .combine = c ) %do% {\n    inner &lt;- foreach(j = 1:1000, .combine = c) %do% {\n      res &lt;- sample(gal, replace = TRUE)\n      median(res)\n    }\n    inner\n  }\n)\n\n#Parallel\n\ncl &lt;- makeCluster(10)\nregisterDoParallel(cl)\n\nsystem.time(\n  result2 &lt;- foreach(i = 1:1000, .combine = c ) %dopar% {\n    foreach(j = 1:1000, .combine = c) %dopar% {\n    res &lt;- sample(gal, replace = TRUE)\n    median(res)\n    }\n  }\n)\n\nstopCluster(cl)\nmean(result1)\nmean(result2)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Practical</span>"
    ]
  }
]