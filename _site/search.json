[
  {
    "objectID": "Practical.html",
    "href": "Practical.html",
    "title": "2  Practical",
    "section": "",
    "text": "3 Question 1\n\n#Initialize cluster\ncl &lt;- makeCluster(10)\nregisterDoParallel(cl)\n\n\n\n\n\n#Loop\nresults &lt;- foreach(i = 1:100 ,.combine = rbind ) %dopar% {\n  vals &lt;- rexp(100,1)\n  c(mean(vals), var(vals))\n  \n}\n\nstopCluster(cl)\n\nresults |&gt; \n  data.frame() |&gt; \n  tibble::remove_rownames() |&gt; \n  knitr::kable(col.names = c(\"Means\", \"Variances\"), digits = 3)\n\n\n\n\nMeans\nVariances\n\n\n\n\n1.005\n1.267\n\n\n1.002\n1.588\n\n\n0.858\n0.868\n\n\n0.946\n0.855\n\n\n1.010\n0.944\n\n\n0.918\n0.637\n\n\n0.974\n1.049\n\n\n0.810\n0.600\n\n\n1.123\n1.442\n\n\n1.073\n1.285\n\n\n0.959\n0.494\n\n\n0.879\n0.623\n\n\n1.023\n0.894\n\n\n0.938\n0.818\n\n\n0.996\n0.868\n\n\n0.850\n0.537\n\n\n1.006\n0.900\n\n\n0.969\n0.879\n\n\n1.073\n1.036\n\n\n0.886\n0.601\n\n\n0.848\n0.938\n\n\n0.949\n0.964\n\n\n0.991\n0.930\n\n\n1.106\n1.262\n\n\n0.941\n0.800\n\n\n0.861\n0.751\n\n\n1.079\n0.915\n\n\n0.939\n0.562\n\n\n0.960\n0.662\n\n\n0.948\n0.780\n\n\n1.053\n1.166\n\n\n1.153\n1.462\n\n\n0.999\n0.996\n\n\n0.827\n0.703\n\n\n0.860\n0.844\n\n\n1.105\n1.132\n\n\n0.983\n1.124\n\n\n1.012\n1.211\n\n\n0.927\n0.878\n\n\n1.010\n0.916\n\n\n1.088\n1.100\n\n\n0.794\n0.519\n\n\n0.947\n0.799\n\n\n1.083\n0.834\n\n\n1.217\n1.516\n\n\n1.008\n0.979\n\n\n0.934\n1.056\n\n\n1.060\n1.337\n\n\n1.110\n1.047\n\n\n0.906\n0.997\n\n\n0.808\n0.671\n\n\n1.083\n0.749\n\n\n0.867\n0.787\n\n\n1.095\n1.312\n\n\n1.106\n1.220\n\n\n1.117\n1.352\n\n\n0.689\n0.496\n\n\n1.092\n1.291\n\n\n1.098\n1.507\n\n\n1.171\n1.809\n\n\n0.988\n1.049\n\n\n0.931\n0.827\n\n\n1.050\n1.262\n\n\n1.132\n1.106\n\n\n1.015\n1.071\n\n\n0.972\n0.968\n\n\n0.937\n1.067\n\n\n0.932\n1.164\n\n\n0.982\n0.850\n\n\n1.166\n1.567\n\n\n0.941\n0.633\n\n\n1.016\n0.979\n\n\n1.025\n1.052\n\n\n1.068\n1.075\n\n\n0.913\n0.891\n\n\n1.048\n0.803\n\n\n1.053\n1.270\n\n\n0.973\n0.793\n\n\n1.137\n1.222\n\n\n0.920\n0.827\n\n\n0.962\n1.157\n\n\n0.905\n0.784\n\n\n0.959\n0.720\n\n\n1.204\n1.472\n\n\n0.923\n0.668\n\n\n1.122\n0.847\n\n\n1.033\n1.182\n\n\n1.016\n1.285\n\n\n1.019\n0.871\n\n\n0.980\n0.697\n\n\n1.163\n1.445\n\n\n0.920\n0.679\n\n\n0.910\n0.911\n\n\n1.010\n1.032\n\n\n1.088\n1.576\n\n\n0.955\n0.911\n\n\n1.040\n0.701\n\n\n0.962\n0.734\n\n\n1.111\n0.985\n\n\n0.929\n0.861\n\n\n\n\n\n\n\n4 Question 2\nBelow are serial and parallel bootstrapping computations of 1 sample at a time each of size 1000.\n\ngal &lt;- galaxies\n\n#1 Bootstrap sample of 1000 at a time\n\n#Serial \ntablefy(\n  system.time(\n    result1 &lt;- foreach(i = 1:1000, .combine = c ) %do% {\n      res &lt;- sample(gal, replace = TRUE)\n      median(res)\n    }\n  ), \n  \"Serial single sample bootstrap\"\n)\n\n\nSerial single sample bootstrap\n\n\nUser time\nSystem Time\nTotal elapsed\n\n\n\n\n0.06\n0.003\n0.063\n\n\n\n\n#Parallel\n\ncl &lt;- makeCluster(10)\nregisterDoParallel(cl)\n\ntablefy(\n  system.time(\n    result2 &lt;- foreach(i = 1:1000, .combine = c ) %dopar% {\n      res &lt;- sample(gal, replace = TRUE)\n      median(res)\n    }\n  ), \n  \"Parallel single sample bootstrap\"\n)\n\n\nParallel single sample bootstrap\n\n\nUser time\nSystem Time\nTotal elapsed\n\n\n\n\n0.069\n0.01\n0.085\n\n\n\n\nstopCluster(cl)\n\nClearly the use of parallelisation did not result in decreases computational time, in fact the parallelised computation took longer, likely due to the time taken to assign operations to the cores in a parallel manner. It seems as if the quantity of data that needed to be returned was not large enough for parallel computing to be significantly more efficient.\nBelow are serial and parallel bootstraps of 1000 samples at a time, each of size 1000.\n\n#1 00 bootstrap samples of 1000 at a time \n\n\n#Serial \ntablefy(\n  system.time(\n    result1 &lt;- foreach(i = 1:1000, .combine = c ) %do% {\n      inner &lt;- foreach(j = 1:1000, .combine = c) %do% {\n        res &lt;- sample(gal, replace = TRUE)\n        median(res)\n      }\n      inner\n    }\n  ), \"Serial bootstrap of 1000 samples\" \n)\n\n\nSerial bootstrap of 1000 samples\n\n\nUser time\nSystem Time\nTotal elapsed\n\n\n\n\n57.932\n0.361\n224.048\n\n\n\n\n#Parallel\n\ncl &lt;- makeCluster(10)\nregisterDoParallel(cl)\n\ntablefy(system.time(\n  result2 &lt;- foreach(i = 1:1000, .combine = rbind, .packages = 'foreach' ) %dopar% {\n    inner &lt;- foreach(j = 1:1000, .combine = c, .packages = 'foreach') %dopar% {\n    res &lt;- sample(gal, replace = TRUE)\n    median(res)\n    }\n    return(inner)\n  }\n), \"Parallel bootstrap of 1000 samples\"\n)\n\n\nParallel bootstrap of 1000 samples\n\n\nUser time\nSystem Time\nTotal elapsed\n\n\n\n\n0.235\n0.095\n14.925\n\n\n\n\nstopCluster(cl)\n\nClearly the use of parallel computing resulting in a much faster computation and would provide efficiency in such a situation.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Practical</span>"
    ]
  }
]